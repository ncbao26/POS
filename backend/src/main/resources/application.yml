server:
  port: ${PORT:8080}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

spring:
  application:
    name: webthanhtoan-backend
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}
  
  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:testdb}
    driver-class-name: ${DB_DRIVER:org.h2.Driver}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:5}
      minimum-idle: ${DB_POOL_MIN:2}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
  
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:create-drop}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: ${JPA_DIALECT:org.hibernate.dialect.H2Dialect}
        format_sql: ${JPA_FORMAT_SQL:false}
    database-platform: ${JPA_DIALECT:org.hibernate.dialect.H2Dialect}
    open-in-view: false
  
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:true}
  
  flyway:
    enabled: ${FLYWAY_ENABLED:false}
    baseline-on-migrate: ${FLYWAY_BASELINE_ON_MIGRATE:true}
    validate-on-migrate: ${FLYWAY_VALIDATE_ON_MIGRATE:false}
  
  security:
    user:
      name: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:admin123}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKeyForWebThanhToanApplication123456789012345678901234567890}
  expiration: ${JWT_EXPIRATION:86400000}

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:3000}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:*}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}

# Logging Configuration
logging:
  level:
    com.webthanhtoan: ${LOG_LEVEL_APP:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:WARN}
    org.hibernate: ${LOG_LEVEL_HIBERNATE:WARN}
    org.springframework.web: ${LOG_LEVEL_WEB:WARN}
    org.springframework.boot: ${LOG_LEVEL_BOOT:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info}
      base-path: /actuator
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_DETAILS:when-authorized}
  info:
    env:
      enabled: true 