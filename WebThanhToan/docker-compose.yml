version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pos-postgres
    environment:
      POSTGRES_DB: webthanhtoan
      POSTGRES_USER: webthanhtoan_user
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U webthanhtoan_user -d webthanhtoan"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pos-backend
    environment:
      SPRING_PROFILES_ACTIVE: development
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/webthanhtoan
      SPRING_DATASOURCE_USERNAME: webthanhtoan_user
      SPRING_DATASOURCE_PASSWORD: admin123
      JWT_SECRET: your-super-secret-jwt-key-here-make-it-long-and-secure
      CORS_ALLOWED_ORIGINS: http://localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pos-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pos-frontend
    environment:
      VITE_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - pos-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  pos-network:
    driver: bridge 