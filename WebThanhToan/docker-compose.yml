version: '3.8'

services:
  # SQL Server Database - Optimized for low-end laptops
  database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: webthanhtoan-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd123
      - MSSQL_PID=Express
      - MSSQL_MEMORY_LIMIT_MB=512  # Giới hạn RAM cho SQL Server
    ports:
      - "1433:1433"
    volumes:
      - db_data:/var/opt/mssql
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - webthanhtoan-network
    restart: unless-stopped
    # Tối ưu resource cho laptop yếu
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd123 -Q 'SELECT 1'"]
      interval: 45s
      timeout: 15s
      retries: 5
      start_period: 90s

  # Spring Boot Backend - Optimized for low memory
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: webthanhtoan-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://database:1433;databaseName=WebThanhToan;encrypt=false;trustServerCertificate=true
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=YourStrong@Passw0rd123
      - JWT_SECRET=mySecretKeyForProductionShouldBeLongerAndMoreSecure123456789
      - JWT_EXPIRATION=86400000
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      # JVM tối ưu cho laptop yếu
      - JAVA_OPTS=-Xms128m -Xmx512m -XX:+UseG1GC -XX:+UseStringDeduplication -XX:MaxGCPauseMillis=200
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - webthanhtoan-network
    restart: unless-stopped
    # Resource limits cho laptop yếu
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 45s
      timeout: 15s
      retries: 5
      start_period: 90s

  # React Frontend with Nginx - Lightweight
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - VITE_API_BASE_URL=/api
    container_name: webthanhtoan-frontend
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - webthanhtoan-network
    restart: unless-stopped
    # Nginx rất nhẹ, không cần giới hạn nhiều
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 32M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for caching - Optional và lightweight
  redis:
    image: redis:7-alpine
    container_name: webthanhtoan-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - webthanhtoan-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 64mb --maxmemory-policy allkeys-lru
    # Redis rất nhẹ
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 32M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  webthanhtoan-network:
    driver: bridge 